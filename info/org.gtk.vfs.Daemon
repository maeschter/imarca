
https://git.gnome.org/browse/gvfs/tree/common/org.gtk.vfs.xml
--------------------------------------------------------------------------------
<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <!--
      org.gtk.vfs.Daemon:

      Each daemon (main and for mounts) implement this.
  -->
  <interface name='org.gtk.vfs.Daemon'>
    <method name="GetConnection">
      <arg type='s' name='address1' direction='out'/>
      <arg type='s' name='address2' direction='out'/>
    </method>
    <method name="Cancel">
      <arg type='u' name='serial' direction='in'/>
    </method>
    <method name="Mount">
      <arg type='b' name='automount' direction='in'/>
      <arg type='s' name='dbus_id' direction='in'/>
      <arg type='o' name='obj_path' direction='in'/>
      <arg type='a{sv}' name='reply' direction='out'/>
    </method>
  </interface>

  <!--
      org.gtk.vfs.Spawner:

      Implemented by the spawner of a process, the spawned process sends the
      spawned message (with noreply) when it has spawned and gotten a dbus id.
  -->
  <interface name='org.gtk.vfs.Spawner'>
    <method name="Spawned">
      <arg type='b' name='succeeded' direction='in'/>
      <arg type='s' name='error_message' direction='in'/>
      <arg type='u' name='error_code' direction='in'/>
    </method>
  </interface>

  <!--
      org.gtk.vfs.MountTracker:

      The mount tracking interface in the main daemon.
  -->
  <interface name='org.gtk.vfs.MountTracker'>
    <method name="LookupMount">
      <arg type='(aya{sv})' name='mount_spec' direction='in'/>
      <arg type='(sossssssbay(aya{sv})ay)' name='mount' direction='out'/>
    </method>
    <method name="LookupMountByFusePath">
      <arg type='ay' name='fuse_path' direction='in'/>
      <arg type='(sossssssbay(aya{sv})ay)' name='mount' direction='out'/>
    </method>
    <method name="MountLocation">
      <arg type='(aya{sv})' name='mount_spec' direction='in'/>
      <arg type='(so)' name='mount_source' direction='in'/>
    </method>
    <method name="ListMounts">
      <arg type='a(sossssssbay(aya{sv})ay)' name='mounts' direction='out'/>
    </method>
    <method name="RegisterMount">
      <arg type='o' name='obj_path' direction='in'/>
      <arg type='s' name='display_name' direction='in'/>
      <arg type='s' name='stable_name' direction='in'/>
      <arg type='s' name='x_content_types' direction='in'/>
      <arg type='s' name='icon' direction='in'/>
      <arg type='s' name='symbolic_icon' direction='in'/>
      <arg type='s' name='prefered_filename_encoding' direction='in'/>
      <arg type='b' name='user_visible' direction='in'/>
      <arg type='(aya{sv})' name='mount_spec' direction='in'/>
      <arg type='ay' name='default_location' direction='in'/>
    </method>
    <method name="UnregisterMount">
      <arg type='o' name='obj_path' direction='in'/>
    </method>
    <method name="ListMountTypes">
      <arg type='as' name='mount_types' direction='out'/>
    </method>
    <method name="ListMountableInfo">
      <arg type='a(ssasib)' name='mountables' direction='out'/>
    </method>
    <method name="RegisterFuse">
    </method>
    <signal name="Mounted">
      <arg type='(sossssssbay(aya{sv})ay)' name='mount'/>
    </signal>
    <signal name="Unmounted">
      <arg type='(sossssssbay(aya{sv})ay)' name='mount'/>
    </signal>
  </interface>

  <!--
      org.gtk.vfs.Mountable:

      Mount daemons that support mounting more mounts implement this,
      and set the dbus name in the mountable description file.
  -->
  <interface name='org.gtk.vfs.Mountable'>
    <method name="Mount">
      <arg type='(aya{sv})' name='mount_spec' direction='in'/>
      <arg type='b' name='automount' direction='in'/>
      <arg type='(so)' name='mount_source' direction='in'/>
    </method>
  </interface>

  <!--
      org.gtk.vfs.MountOperation:

      Used by the dbus-proxying implementation of GMoutOperation.
  -->
  <interface name='org.gtk.vfs.MountOperation'>
    <method name="AskPassword">
      <arg type='s' name='message_string' direction='in'/>
      <arg type='s' name='default_user' direction='in'/>
      <arg type='s' name='default_domain' direction='in'/>
      <arg type='u' name='flags_as_int' direction='in'/>
      <arg type='b' name='handled' direction='out'/>
      <arg type='b' name='aborted' direction='out'/>
      <arg type='s' name='password' direction='out'/>
      <arg type='s' name='username' direction='out'/>
      <arg type='s' name='domain' direction='out'/>
      <arg type='b' name='anonymous' direction='out'/>
      <arg type='u' name='password_save' direction='out'/>
    </method>
    <method name="AskQuestion">
      <arg type='s' name='message_string' direction='in'/>
      <arg type='as' name='choices' direction='in'/>
      <arg type='b' name='handled' direction='out'/>
      <arg type='b' name='aborted' direction='out'/>
      <arg type='u' name='choice' direction='out'/>
    </method>
    <method name="ShowProcesses">
      <arg type='s' name='message_string' direction='in'/>
      <arg type='as' name='choices' direction='in'/>
      <arg type='ai' name='processes' direction='in'/>
      <arg type='b' name='handled' direction='out'/>
      <arg type='b' name='aborted' direction='out'/>
      <arg type='u' name='choice' direction='out'/>
    </method>
    <method name="ShowUnmountProgress">
      <arg type='s' name='message_string' direction='in'/>
      <arg type='x' name='time_left' direction='in'/>
      <arg type='x' name='bytes_left' direction='in'/>
    </method>
    <method name="Aborted">
    </method>
  </interface>

  <!--
      org.gtk.vfs.Mount:

      Each mount (there might be several in a daemon) implements one of these interfaces
      for standard i/o operations.
  -->
  <interface name='org.gtk.vfs.Mount'>
    <method name="Unmount">
      <arg type='s' name='dbus_id' direction='in'/>
      <arg type='o' name='obj_path' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
    </method>
    <method name="OpenForRead">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='u' name='pid' direction='in'/>
      <arg type='h' name='fd_id' direction='out'/>
      <arg type='b' name='can_seek' direction='out'/>
      <annotation name="org.gtk.GDBus.C.UnixFD" value="true"/>
    </method>
    <method name="OpenForWrite">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='q' name='mode' direction='in'/>
      <arg type='s' name='etag' direction='in'/>
      <arg type='b' name='make_backup' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='u' name='pid' direction='in'/>
      <arg type='h' name='fd_id' direction='out'/>
      <arg type='b' name='can_seek' direction='out'/>
      <arg type='t' name='initial_offset' direction='out'/>
      <annotation name="org.gtk.GDBus.C.UnixFD" value="true"/>
    </method>
    <method name="OpenForWriteFlags">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='q' name='mode' direction='in'/>
      <arg type='s' name='etag' direction='in'/>
      <arg type='b' name='make_backup' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='u' name='pid' direction='in'/>
      <arg type='h' name='fd_id' direction='out'/>
      <arg type='u' name='flags' direction='out'/>
      <arg type='t' name='initial_offset' direction='out'/>
      <annotation name="org.gtk.GDBus.C.UnixFD" value="true"/>
    </method>
    <method name="QueryInfo">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='s' name='attributes' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='s' name='uri' direction='in'/>
      <arg type='a(suv)' name='info' direction='out'/>
    </method>
    <method name="QueryFilesystemInfo">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='s' name='attributes' direction='in'/>
      <arg type='a(suv)' name='info' direction='out'/>
    </method>
    <method name="Enumerate">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='s' name='obj_path' direction='in'/>
      <arg type='s' name='attributes' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='s' name='uri' direction='in'/>
    </method>
    <method name="CreateDirectoryMonitor">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='s' name='obj_path' direction='out'/>
    </method>
    <method name="CreateFileMonitor">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='s' name='obj_path' direction='out'/>
    </method>
    <method name="MountMountable">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='s' name='dbus_id' direction='in'/>
      <arg type='o' name='obj_path' direction='in'/>
      <arg type='b' name='is_uri' direction='out'/>
      <arg type='ay' name='path' direction='out'/>
      <arg type='b' name='must_mount_location' direction='out'/>
      <arg type='(aya{sv})' name='mount_spec' direction='out'/>
    </method>
    <method name="UnmountMountable">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='s' name='dbus_id' direction='in'/>
      <arg type='o' name='obj_path' direction='in'/>
    </method>
    <method name="EjectMountable">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='s' name='dbus_id' direction='in'/>
      <arg type='o' name='obj_path' direction='in'/>
    </method>
    <method name="StartMountable">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='s' name='dbus_id' direction='in'/>
      <arg type='o' name='obj_path' direction='in'/>
    </method>
    <method name="StopMountable">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='s' name='dbus_id' direction='in'/>
      <arg type='o' name='obj_path' direction='in'/>
    </method>
    <method name="PollMountable">
      <arg type='ay' name='path_data' direction='in'/>
    </method>
    <method name="SetDisplayName">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='s' name='display_name' direction='in'/>
      <arg type='ay' name='new_path' direction='out'/>
    </method>
    <method name="Delete">
      <arg type='ay' name='path_data' direction='in'/>
    </method>
    <method name="Trash">
      <arg type='ay' name='path_data' direction='in'/>
    </method>
    <method name="MakeDirectory">
      <arg type='ay' name='path_data' direction='in'/>
    </method>
    <method name="MakeSymbolicLink">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='ay' name='symlink_value' direction='in'/>
    </method>
    <method name="Copy">
      <arg type='ay' name='path1_data' direction='in'/>
      <arg type='ay' name='path2_data' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='o' name='progress_obj_path' direction='in'/>
    </method>
    <method name="Move">
      <arg type='ay' name='path1_data' direction='in'/>
      <arg type='ay' name='path2_data' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='o' name='progress_obj_path' direction='in'/>
    </method>
    <method name="Push">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='ay' name='local_path' direction='in'/>
      <arg type='b' name='send_progress' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='o' name='progress_obj_path' direction='in'/>
      <arg type='b' name='remove_source' direction='in'/>
    </method>
    <method name="Pull">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='ay' name='local_path' direction='in'/>
      <arg type='b' name='send_progress' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='o' name='progress_obj_path' direction='in'/>
      <arg type='b' name='remove_source' direction='in'/>
    </method>
    <method name="SetAttribute">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='u' name='flags' direction='in'/>
      <arg type='(suv)' name='attribute' direction='in'/>
    </method>
    <method name="QuerySettableAttributes">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='a(suu)' name='list' direction='out'/>
    </method>
    <method name="QueryWritableNamespaces">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='a(suu)' name='list' direction='out'/>
    </method>
    <method name="OpenIconForRead">
      <arg type='ay' name='path_data' direction='in'/>
      <arg type='h' name='fd_id' direction='out'/>
      <arg type='b' name='can_seek' direction='out'/>
      <annotation name="org.gtk.GDBus.C.UnixFD" value="true"/>
    </method>
  </interface>

  <!--
      org.gtk.vfs.Enumerator:

      Implemented by client side for a file enumerator.
  -->
  <interface name='org.gtk.vfs.Enumerator'>
    <method name="Done">
    </method>
    <method name="GotInfo">
      <arg type='aa(suv)' name='infos' direction='in'/>
    </method>
  </interface>

  <!--
      org.gtk.vfs.Progress:

      Progress callback interface for copy and move.
  -->
  <interface name='org.gtk.vfs.Progress'>
    <method name="Progress">
      <arg type='t' name='current' direction='in'/>
      <arg type='t' name='total' direction='in'/>
    </method>
  </interface>

  <!--
      org.gtk.vfs.Monitor
  -->
  <interface name='org.gtk.vfs.Monitor'>
    <method name="Subscribe">
      <arg type='o' name='object_path' direction='in'/>
    </method>
    <method name="Unsubscribe">
      <arg type='o' name='object_path' direction='in'/>
    </method>
  </interface>

  <!--
      org.gtk.vfs.MonitorClient
  -->
  <interface name='org.gtk.vfs.MonitorClient'>
    <method name="Changed">
      <arg type='u' name='event_type' direction='in'/>
      <arg type='(aya{sv})' name='mount_spec' direction='in'/>
      <arg type='ay' name='file_path' direction='in'/>
      <arg type='(aya{sv})' name='other_mount_spec' direction='in'/>
      <arg type='ay' name='other_file_path' direction='in'/>
    </method>
  </interface>

</node>
--------------------------------------------------------------------------------

typedef struct
 {
   volatile int ref_count;
   char *display_name;
   char *stable_name;
   char *x_content_types;
   GIcon *icon;
   char *dbus_id;
   char *object_path;
   gboolean user_visible;
   char *prefered_filename_encoding; /* NULL -> UTF8 */
   char *fuse_mountpoint;
   char *default_location;
   GMountSpec *mount_spec;
 } GMountInfo;

typedef struct
 {
   volatile int ref_count;
   GArray *items;
   char *mount_prefix;
   gboolean is_unique;
 } GMountSpec;

typedef struct
 {
   char *key;
   char *value;
 } GMountSpecItem;


Canon SX200 ####################################################################

!!!!!! old stuff !!!!!!!!!!

signal sender=:1.6 -> dest=(null destination) serial=257 path=/org/gtk/vfs/mounttracker; 
interface=org.gtk.vfs.MountTracker; member=mounted
   struct {
      string ":1.255"
      object path "/org/gtk/vfs/mount/1"
      string "Canon Digital Camera"
      string "gphoto2-Medium auf usb:001,009"
      string "x-content/image-dcf"
      string ". GThemedIcon camera-photo camera"
      string ""
      boolean true
      array of bytes "/home/gerd/.gvfs/gphoto2-Medium auf usb%3A001,009"
      struct {
         array of bytes "/"
         array [
            struct {
               string "host"
               array of bytes "[usb:001,009]"
            }
            struct {
               string "type"
               array of bytes "gphoto2"
            }
         ]
      }
      array [
      ]
   }
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

signal sender=:1.6 -> dest=(null destination) serial=175 path=/org/gtk/vfs/mounttracker; 
interface=org.gtk.vfs.MountTracker; member=unmounted
   struct {
      string ":1.179"
      object path "/org/gtk/vfs/mount/1"
      string "Canon Digital Camera"
      string "gphoto2-Medium auf usb:001,008"
      string "x-content/image-dcf"
      string ". GThemedIcon camera-photo camera"
      string ""
      boolean true
      array of bytes "/home/gerd/.gvfs/gphoto2-Medium auf usb%3A001,008"
      struct {
         array of bytes "/"
         array [
            struct {
               string "host"
               array of bytes "[usb:001,008]"
            }
            struct {
               string "type"
               array of bytes "gphoto2"
            }
         ]
      }
      array [
      ]
   }

DBus ###########################################################################
method call sender=:1.186 -> dest=org.gtk.vfs.Daemon serial=3 path=/org/gtk/vfs/mounttracker; 
interface=org.gtk.vfs.MountTracker; member=listMounts
method return sender=:1.15 -> dest=:1.186 reply_serial=3
   array [
      struct {
         string ":1.72"
         object path "/org/gtk/vfs/mount/1"
         string "Network"
         string "Network"
         string ""
         string ". GThemedIcon network-workgroup network"
         string ""
         boolean false
         array [
         ]
         struct {
            array of bytes "/"
            array [
               struct {
                  string "type"
                  array of bytes "network"
               }
            ]
         }
         array [
         ]
      }
      struct {
         string ":1.76"
         object path "/org/gtk/vfs/mount/1"
         string "Dns-SD"
         string "Network"
         string ""
         string ". GThemedIcon network-workgroup network"
         string ""
         boolean false
         array [
         ]
         struct {
            array of bytes "/"
            array [
               struct {
                  string "host"
                  array of bytes "local"
               }
               struct {
                  string "type"
                  array of bytes "dns-sd"
               }
            ]
         }
         array [
         ]
      }
      struct {
         string ":1.70"
         object path "/org/gtk/vfs/mount/1"
         string "Trash"
         string "Trash"
         string ""
         string ". GThemedIcon user-trash user"
         string ""
         boolean false
         array [
         ]
         struct {
            array of bytes "/"
            array [
               struct {
                  string "type"
                  array of bytes "trash"
               }
            ]
         }
         array [
         ]
      }
   ]


